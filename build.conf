SOURCE_REPO='moonbuggy2000/alpine-s6-nginx-uwsgi'

ARCH_YAML='arch.yaml'

DPASTE_REPO='bartTC/dpaste'

ALPINE_VERSION='3.13'
NGINX_VERSION='1.18'
PYTHON_VERSION='3.8'

SSL_LIBRARY="openssl"
MODULE_IMPORTS="cffi misaka mysqlclient paramiko-${SSL_LIBRARY} psycopg2-binary2.8.4 pycparser pyuwsgi"

declare -A BUILD_ARGS=( \
	[PYTHON_VERSION]='Python version' \
	[DPASTE_VERSION]='dpaste version' \
	[ALPINE_VERSION]='Alpine version' \
	[NGINX_VERSION]='Nginx version' \
	[IMPORTS_DIR]='Imports dir' \
)

declare -A CHECKOUT_DISPLAY=( \
	[BUILD_ARCH]='Build arch' \
	[ALPINE_VERSION]='Alpine version' \
	[NGINX_VERSION]='Nginx version' \
	[PYTHON_VERSION]='Python version' \
	[DPASTE_VERSION]='dpaste version' \
	[DPASTE_LATEST]='dpaste latest' \
)

post_checkout_start () {
	[ -z "${DPASTE_LATEST+set}" ] \
		&& DPASTE_LATEST="$(git_latest_release "${DPASTE_REPO}" | sed -En 's|^v?([0-9\.]*).*|\1|p')"
	[ -n "${DPASTE_VERSION}" ] && echo "Can't find dpaste version. Exiting." && return 1

	## determine the dpaste version to install
	local dpaste_tag_version
	dpaste_tag_version="$(echo "${DOCKER_TAG}" | sed -En 's|^v?([0-9\.]*).*|\1|p')"
	[ -n "${dpaste_tag_version}" ] \
		&& DPASTE_VERSION="${dpaste_tag_version}" \
		|| DPASTE_VERSION="${DPASTE_LATEST}"

	## process wheel tags
	WHEEL_TAGS=''
	for module in ${MODULE_IMPORTS}; do
		WHEEL_TAGS="$(python_get_module_from_string "${module}") ${WHEEL_TAGS}"
	done
	add_param "$(echo "${WHEEL_TAGS}" | xargs -n1 | sort -uV | xargs)" 'WHEEL_TAGS' 'Wheel tags'
}

## get the target tag
get_target_tag () { echo "${DPASTE_VERSION}"; }

## get the source tag
get_source_tag () { echo "${NGINX_VERSION}"; }
